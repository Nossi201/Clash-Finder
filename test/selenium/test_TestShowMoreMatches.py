# test/selenium/test_testButtonShowMoreMetches.py
# Generated by Selenium IDE
# Must add xpath+scroll+wait to work
import pytest
import time
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait, Select
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import ElementClickInterceptedException
from selenium.webdriver.common.action_chains import ActionChains

class TestShowMoreMatches:
    """
    End-to-End test for dynamic "Show More" matches button:
    1. Navigate to a known player's stats page with limited matches loaded.
    2. Verify initial number of match entries displayed.
    3. Click the "Show More" button.
    4. Wait for additional match entries to load.
    5. Confirm that the total match count has increased by the expected amount.
    """
    def setup_method(self):
        self.driver = webdriver.Chrome()
        self.wait = WebDriverWait(self.driver, 10)

    def teardown_method(self):
        self.driver.quit()

    def click_load_more(self):
        btn = self.wait.until(EC.element_to_be_clickable((By.ID, "loadMoreMatchesButton")))
        self.driver.execute_script("""
            arguments[0].scrollIntoView(true);
            window.scrollBy(0, -150);
        """, btn)
        try:
            btn.click()
        except ElementClickInterceptedException:
            self.driver.execute_script("arguments[0].click();", btn)
        time.sleep(0.5)

    def select_number(self, text):
        sel_elem = self.wait.until(EC.presence_of_element_located((By.ID, "number-list")))
        Select(sel_elem).select_by_visible_text(text)

    def test_show_more_matches(self):
        self.driver.get("http://127.0.0.1:5000/player_stats/HextechChest--202/eu-west")
        self.driver.set_window_size(1936, 1096)
        self.click_load_more()
        self.select_number("20")
        self.click_load_more()
        self.select_number("1")
        self.click_load_more()
